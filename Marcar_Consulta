<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agendar Consulta - CareMed</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #2a5298;
            --secondary: #4a7dcc;
            --accent: #00b8d4;
            --light: #f8f9fa;
            --dark: #343a40;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }
        
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }
        
        /* Header */
        header {
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
        }
        
        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
        }
        
        .nav-menu {
            display: flex;
            list-style: none;
        }
        
        .nav-menu li {
            margin-left: 25px;
        }
        
        .nav-menu a {
            color: var(--dark);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .nav-menu a:hover {
            color: var(--primary);
        }
        
        .btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: var(--primary);
            color: white;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
            border: none;
            cursor: pointer;
        }
        
        .btn:hover {
            background-color: var(--secondary);
        }
        
        .btn-outline {
            background-color: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }
        
        .btn-outline:hover {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-success {
            background-color: var(--success);
        }
        
        .btn-success:hover {
            background-color: #218838;
        }
        
        .hamburger {
            display: none;
            cursor: pointer;
            font-size: 1.5rem;
        }
        
        /* Breadcrumb */
        .breadcrumb {
            padding: 15px 0;
            font-size: 0.9rem;
        }
        
        .breadcrumb a {
            color: var(--primary);
            text-decoration: none;
        }
        
        .breadcrumb span {
            color: var(--dark);
        }
        
        /* Main Content */
        .main-content {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin: 30px 0;
        }
        
        .appointment-form {
            flex: 2;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            padding: 30px;
        }
        
        .form-section {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        
        .form-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: var(--primary);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary);
        }
        
        .specialty-doctors {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .doctor-option {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .doctor-option:hover {
            border-color: var(--primary);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .doctor-option.selected {
            border-color: var(--primary);
            background-color: rgba(42, 82, 152, 0.05);
        }
        
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            margin-top: 20px;
        }
        
        .calendar-header {
            grid-column: 1 / -1;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .calendar-weekday {
            text-align: center;
            font-weight: 500;
            padding: 10px;
        }
        
        .calendar-day {
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            cursor: pointer;
        }
        
        .calendar-day:hover {
            background-color: #eee;
        }
        
        .calendar-day.selected {
            background-color: var(--primary);
            color: white;
        }
        
        .calendar-day.disabled {
            color: #ccc;
            cursor: not-allowed;
        }
        
        .time-slots {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
            margin-top: 20px;
        }
        
        .time-slot {
            padding: 10px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
        }
        
        .time-slot:hover {
            border-color: var(--primary);
        }
        
        .time-slot.selected {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }
        
        .time-slot.disabled {
            color: #ccc;
            cursor: not-allowed;
        }
        
        .payment-options {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }
        
        .payment-option {
            flex: 1;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .payment-option:hover {
            border-color: var(--primary);
        }
        
        .payment-option.selected {
            border-color: var(--primary);
            background-color: rgba(42, 82, 152, 0.05);
        }
        
        .payment-icon {
            font-size: 2rem;
            margin-bottom: 10px;
            color: var(--accent);
        }
        
        .file-upload {
            border: 2px dashed #ddd;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            margin-top: 20px;
            cursor: pointer;
        }
        
        .file-upload:hover {
            border-color: var(--primary);
        }
        
        .upload-icon {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 15px;
        }
        
        .uploaded-files {
            margin-top: 20px;
        }
        
        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        
        .file-name {
            display: flex;
            align-items: center;
        }
        
        .file-name i {
            margin-right: 10px;
            color: var(--primary);
        }
        
        .file-remove {
            color: var(--danger);
            cursor: pointer;
        }
        
        .appointment-summary {
            flex: 1;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            padding: 30px;
            position: sticky;
            top: 100px;
            height: fit-content;
        }
        
        .summary-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: var(--primary);
            text-align: center;
        }
        
        .summary-item {
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .summary-label {
            font-weight: 500;
            margin-bottom: 5px;
        }
        
        .summary-value {
            color: var(--dark);
        }
        
        .summary-total {
            font-size: 1.2rem;
            font-weight: 700;
            margin-top: 20px;
            text-align: center;
            color: var(--primary);
        }
        
        .consultation-button {
            margin-top: 30px;
            text-align: center;
            display: none;
        }
        
        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }
        
        .modal-content {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            width: 100%;
            max-width: 500px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 1.5rem;
            color: var(--primary);
        }
        
        .modal-close {
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--dark);
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .hamburger {
                display: block;
            }
            
            .nav-menu {
                position: fixed;
                left: -100%;
                top: 70px;
                flex-direction: column;
                background-color: white;
                width: 100%;
                text-align: center;
                transition: 0.3s;
                box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
                padding: 20px 0;
            }
            
            .nav-menu.active {
                left: 0;
            }
            
            .nav-menu li {
                margin: 15px 0;
            }
            
            .main-content {
                flex-direction: column;
            }
            
            .appointment-summary {
                position: static;
            }
            
            .payment-options {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container">
            <nav class="navbar">
                <a href="index.html" class="logo">CareMed</a>
                <ul class="nav-menu">
                    <li><a href="index.html">Início</a></li>
                    <li><a href="index.html#sobre">Mapa do Site</a></li>
                    <li><a href="index.html#sobre">Quem Somos</a></li>
                </ul>
                <div class="hamburger">
                    <i class="fas fa-bars"></i>
                </div>
            </nav>
        </div>
    </header>

    <div class="container">
        <!-- Breadcrumb -->
        <div class="breadcrumb">
            <a href="index.html">Início</a> > <a href="index.html#especialidades">Especialidades</a> > <span>Agendar Consulta</span>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <!-- Appointment Form -->
            <div class="appointment-form">
                <h2 class="form-title">Agendar Consulta</h2>
                
                <!-- Specialty Selection -->
                <div class="form-section">
                    <h3>1. Escolha a Especialidade</h3>
                    <div class="form-group">
                        <label for="specialty">Selecione a especialidade:</label>
                        <select id="specialty" class="form-control">
                            <option value="">Selecione uma especialidade</option>
                            <option value="neurologia">Neurologia</option>
                            <option value="psiquiatria">Psiquiatria</option>
                            <option value="psicologia">Psicologia</option>
                        </select>
                    </div>
                </div>
                
                <!-- Doctor Selection -->
                <div class="form-section" id="doctor-section" style="display: none;">
                    <h3>2. Escolha o Profissional</h3>
                    <p>Selecione um dos profissionais disponíveis:</p>
                    <div class="specialty-doctors" id="doctors-container">
                        <!-- Doctors will be loaded here dynamically -->
                    </div>
                </div>
                
                <!-- Date Selection -->
                <div class="form-section" id="date-section" style="display: none;">
                    <h3>3. Escolha a Data</h3>
                    <p>Selecione uma data disponível para a consulta:</p>
                    <div class="calendar" id="calendar">
                        <!-- Calendar will be generated here dynamically -->
                    </div>
                </div>
                
                <!-- Time Selection -->
                <div class="form-section" id="time-section" style="display: none;">
                    <h3>4. Escolha o Horário</h3>
                    <p>Selecione um horário disponível:</p>
                    <div class="time-slots" id="time-slots">
                        <!-- Time slots will be loaded here dynamically -->
                    </div>
                </div>
                
                <!-- Payment Method -->
                <div class="form-section" id="payment-section" style="display: none;">
                    <h3>5. Método de Pagamento</h3>
                    <p>Escolha como deseja pagar sua consulta:</p>
                    <div class="payment-options">
                        <div class="payment-option" data-method="token">
                            <div class="payment-icon">
                                <i class="fas fa-coins"></i>
                            </div>
                            <h4>Pagar com Token</h4>
                            <p>Rápido, seguro e com desconto</p>
                        </div>
                        <div class="payment-option" data-method="traditional">
                            <div class="payment-icon">
                                <i class="fas fa-credit-card"></i>
                            </div>
                            <h4>Pagamento Tradicional</h4>
                            <p>Cartão, transferência ou PIX</p>
                        </div>
                    </div>
                </div>
                
                <!-- Document Upload -->
                <div class="form-section" id="document-section" style="display: none;">
                    <h3>6. Envio de Documentos</h3>
                    <p>Envie os documentos necessários para sua consulta (receitas, exames, etc.):</p>
                    <div class="file-upload" id="file-upload">
                        <div class="upload-icon">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <p>Arraste arquivos aqui ou clique para selecionar</p>
                        <p class="small">Formatos aceitos: PDF, JPG, PNG (Máx. 5MB cada)</p>
                    </div>
                    <input type="file" id="file-input" multiple style="display: none;">
                    <div class="uploaded-files" id="uploaded-files">
                        <!-- Uploaded files will be listed here -->
                    </div>
                </div>
                
                <!-- Submit Button -->
                <div class="form-group" id="submit-section" style="display: none;">
                    <button type="button" id="submit-appointment" class="btn">Confirmar Agendamento</button>
                </div>
            </div>
            
            <!-- Appointment Summary -->
            <div class="appointment-summary">
                <h3 class="summary-title">Resumo da Consulta</h3>
                <div class="summary-item">
                    <div class="summary-label">Especialidade:</div>
                    <div class="summary-value" id="summary-specialty">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Profissional:</div>
                    <div class="summary-value" id="summary-doctor">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Data e Horário:</div>
                    <div class="summary-value" id="summary-datetime">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Método de Pagamento:</div>
                    <div class="summary-value" id="summary-payment">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Documentos:</div>
                    <div class="summary-value" id="summary-documents">0 enviados</div>
                </div>
                <div class="summary-total" id="summary-total">R$ 0,00</div>
                
                <div class="consultation-button" id="consultation-button">
                    <p>Sua consulta está agendada! Volte nesta página no dia marcado para acessar a consulta.</p>
                    <button class="btn btn-success" disabled id="start-consultation">Iniciar Consulta</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Confirmation Modal -->
    <div class="modal" id="confirmation-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Confirmar Agendamento</h3>
                <span class="modal-close">&times;</span>
            </div>
            <div class="modal-body">
                <p>Confirma o agendamento da consulta com os detalhes abaixo?</p>
                <div class="summary-item">
                    <div class="summary-label">Profissional:</div>
                    <div class="summary-value" id="modal-doctor">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Data e Horário:</div>
                    <div class="summary-value" id="modal-datetime">-</div>
                </div>
                <div class="summary-item">
                    <div class="summary-label">Valor:</div>
                    <div class="summary-value" id="modal-total">R$ 0,00</div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <button class="btn" id="confirm-appointment">Confirmar</button>
                    <button class="btn btn-outline" style="margin-left: 10px;" id="cancel-appointment">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Sample data for doctors
        const doctors = {
            neurologia: [
                { id: 1, name: "Dr. Carlos Silva", specialty: "Neurologista", price: 300, tokenPrice: 250, availability: generateAvailability(7) },
                { id: 2, name: "Dr. Marcos Oliveira", specialty: "Neurologista", price: 350, tokenPrice: 280, availability: generateAvailability(5) }
            ],
            psicologia: [
                { id: 3, name: "Dra. Paula Mendes", specialty: "Psicóloga", price: 200, tokenPrice: 180, availability: generateAvailability(6) },
                { id: 4, name: "Dr. Roberto Alves", specialty: "Psicólogo", price: 180, tokenPrice: 150, availability: generateAvailability(4) }
            ],
            psiquiatria: [
                { id: 5, name: "Dra. Ana Costa", specialty: "Psiquiatra", price: 400, tokenPrice: 350, availability: generateAvailability(8) },
                { id: 6, name: "Dr. João Santos", specialty: "Psiquiatra", price: 380, tokenPrice: 320, availability: generateAvailability(7) }
            ]
        };
        
        // Generate sample availability dates
        function generateAvailability(daysCount) {
            const availability = [];
            const today = new Date();
            
            for (let i = 1; i <= daysCount; i++) {
                const date = new Date();
                date.setDate(today.getDate() + i);
                
                // Skip weekends
                if (date.getDay() === 0 || date.getDay() === 6) continue;
                
                const times = [];
                // Generate 3-5 time slots per day
                const slotCount = 3 + Math.floor(Math.random() * 3);
                
                for (let j = 0; j < slotCount; j++) {
                    const hour = 9 + j * 2; // Starting at 9 AM, then 11 AM, 1 PM, etc.
                    times.push(`${hour}:00`);
                }
                
                availability.push({
                    date: date.toISOString().split('T')[0],
                    times: times
                });
            }
            
            return availability;
        }
        
        // Current appointment data
        let appointment = {
            specialty: null,
            doctor: null,
            date: null,
            time: null,
            paymentMethod: null,
            documents: [],
            confirmed: false
        };
        
        // DOM Elements
        const specialtySelect = document.getElementById('specialty');
        const doctorSection = document.getElementById('doctor-section');
        const doctorsContainer = document.getElementById('doctors-container');
        const dateSection = document.getElementById('date-section');
        const calendarEl = document.getElementById('calendar');
        const timeSection = document.getElementById('time-section');
        const timeSlotsEl = document.getElementById('time-slots');
        const paymentSection = document.getElementById('payment-section');
        const documentSection = document.getElementById('document-section');
        const submitSection = document.getElementById('submit-section');
        const fileUpload = document.getElementById('file-upload');
        const fileInput = document.getElementById('file-input');
        const uploadedFiles = document.getElementById('uploaded-files');
        
        // Summary elements
        const summarySpecialty = document.getElementById('summary-specialty');
        const summaryDoctor = document.getElementById('summary-doctor');
        const summaryDatetime = document.getElementById('summary-datetime');
        const summaryPayment = document.getElementById('summary-payment');
        const summaryDocuments = document.getElementById('summary-documents');
        const summaryTotal = document.getElementById('summary-total');
        const consultationButton = document.getElementById('consultation-button');
        const startConsultation = document.getElementById('start-consultation');
        
        // Modal elements
        const confirmationModal = document.getElementById('confirmation-modal');
        const modalDoctor = document.getElementById('modal-doctor');
        const modalDatetime = document.getElementById('modal-datetime');
        const modalTotal = document.getElementById('modal-total');
        const confirmAppointment = document.getElementById('confirm-appointment');
        const cancelAppointment = document.getElementById('cancel-appointment');
        const modalClose = document.querySelector('.modal-close');
        
        // Event Listeners
        specialtySelect.addEventListener('change', handleSpecialtyChange);
        fileUpload.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', handleFileUpload);
        confirmAppointment.addEventListener('click', confirmAppointmentHandler);
        cancelAppointment.addEventListener('click', closeModal);
        modalClose.addEventListener('click', closeModal);
        
        // Handle specialty selection
        function handleSpecialtyChange() {
            const specialty = specialtySelect.value;
            
            if (specialty) {
                appointment.specialty = specialty;
                summarySpecialty.textContent = formatSpecialty(specialty);
                updateSummaryTotal();
                
                // Show doctors for this specialty
                showDoctors(specialty);
                doctorSection.style.display = 'block';
            } else {
                doctorSection.style.display = 'none';
                dateSection.style.display = 'none';
                timeSection.style.display = 'none';
                paymentSection.style.display = 'none';
                documentSection.style.display = 'none';
                submitSection.style.display = 'none';
            }
        }
        
        // Show doctors for a specialty
        function showDoctors(specialty) {
            doctorsContainer.innerHTML = '';
            
            doctors[specialty].forEach(doctor => {
                const doctorEl = document.createElement('div');
                doctorEl.className = 'doctor-option';
                doctorEl.innerHTML = `
                    <h4>${doctor.name}</h4>
                    <p>${doctor.specialty}</p>
                    <p><strong>Valor: R$ ${doctor.price}</strong></p>
                    <p class="small">Com tokens: R$ ${doctor.tokenPrice}</p>
                `;
                
                doctorEl.addEventListener('click', () => selectDoctor(doctor));
                doctorsContainer.appendChild(doctorEl);
            });
        }
        
        // Select a doctor
        function selectDoctor(doctor) {
            appointment.doctor = doctor;
            
            // Update UI
            document.querySelectorAll('.doctor-option').forEach(el => {
                el.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
            
            summaryDoctor.textContent = doctor.name;
            updateSummaryTotal();
            
            // Show date selection
            showCalendar(doctor.availability);
            dateSection.style.display = 'block';
        }
        
        // Show calendar with available dates
        function showCalendar(availability) {
            // For simplicity, we'll just show the next 7 days
            const today = new Date();
            const dates = [];
            
            // Get available dates from doctor's availability
            const availableDates = availability.map(a => a.date);
            
            calendarEl.innerHTML = '';
            
            // Create calendar header
            const weekdays = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];
            weekdays.forEach(day => {
                const dayEl = document.createElement('div');
                dayEl.className = 'calendar-weekday';
                dayEl.textContent = day;
                calendarEl.appendChild(dayEl);
            });
            
            // Create calendar days
            for (let i = 0; i < 7; i++) {
                const date = new Date();
                date.setDate(today.getDate() + i);
                
                const dateString = date.toISOString().split('T')[0];
                const day = date.getDate();
                const isAvailable = availableDates.includes(dateString);
                
                const dayEl = document.createElement('div');
                dayEl.className = `calendar-day ${isAvailable ? '' : 'disabled'}`;
                dayEl.textContent = day;
                dayEl.dataset.date = dateString;
                
                if (isAvailable) {
                    dayEl.addEventListener('click', () => selectDate(dateString));
                }
                
                calendarEl.appendChild(dayEl);
            }
        }
        
        // Select a date
        function selectDate(date) {
            appointment.date = date;
            
            // Update UI
            document.querySelectorAll('.calendar-day').forEach(el => {
                el.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
            
            // Show time slots for selected date
            showTimeSlots(date);
            timeSection.style.display = 'block';
        }
        
        // Show time slots for selected date
        function showTimeSlots(date) {
            // Find availability for this date
            const dateAvailability = appointment.doctor.availability.find(a => a.date === date);
            
            timeSlotsEl.innerHTML = '';
            
            if (dateAvailability && dateAvailability.times) {
                dateAvailability.times.forEach(time => {
                    const timeEl = document.createElement('div');
                    timeEl.className = 'time-slot';
                    timeEl.textContent = time;
                    timeEl.addEventListener('click', () => selectTime(time));
                    timeSlotsEl.appendChild(timeEl);
                });
            }
        }
        
        // Select a time
        function selectTime(time) {
            appointment.time = time;
            
            // Update UI
            document.querySelectorAll('.time-slot').forEach(el => {
                el.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
            
            summaryDatetime.textContent = `${formatDate(appointment.date)} às ${time}`;
            
            // Show payment options
            paymentSection.style.display = 'block';
            
            // Add event listeners to payment options
            document.querySelectorAll('.payment-option').forEach(option => {
                option.addEventListener('click', () => {
                    document.querySelectorAll('.payment-option').forEach(el => {
                        el.classList.remove('selected');
                    });
                    option.classList.add('selected');
                    
                    appointment.paymentMethod = option.dataset.method;
                    summaryPayment.textContent = option.dataset.method === 'token' ? 'Token' : 'Tradicional';
                    updateSummaryTotal();
                    
                    // Show document upload
                    documentSection.style.display = 'block';
                    
                    // Show submit button
                    submitSection.style.display = 'block';
                    
                    // Add event listener to submit button
                    document.getElementById('submit-appointment').addEventListener('click', showConfirmationModal);
                });
            });
        }
        
        // Handle file upload
        function handleFileUpload() {
            const files = fileInput.files;
            
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                
                // Check file size (max 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    alert('Arquivo muito grande. O tamanho máximo é 5MB.');
                    continue;
                }
                
                // Check file type
                const fileType = file.type;
                if (!fileType.includes('image/') && fileType !== 'application/pdf') {
                    alert('Formato de arquivo não suportado. Use PDF, JPG ou PNG.');
                    continue;
                }
                
                // Add to appointment documents
                appointment.documents.push(file);
                
                // Create file item in UI
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <div class="file-name">
                        <i class="fas fa-file"></i>
                        <span>${file.name}</span>
                    </div>
                    <div class="file-remove">
                        <i class="fas fa-times"></i>
                    </div>
                `;
                
                // Add event listener to remove button
                fileItem.querySelector('.file-remove').addEventListener('click', () => {
                    fileItem.remove();
                    appointment.documents = appointment.documents.filter(f => f.name !== file.name);
                    summaryDocuments.textContent = `${appointment.documents.length} enviados`;
                });
                
                uploadedFiles.appendChild(fileItem);
            }
            
            summaryDocuments.textContent = `${appointment.documents.length} enviados`;
            
            // Clear file input
            fileInput.value = '';
        }
        
        // Show confirmation modal
        function showConfirmationModal() {
            modalDoctor.textContent = appointment.doctor.name;
            modalDatetime.textContent = `${formatDate(appointment.date)} às ${appointment.time}`;
            modalTotal.textContent = summaryTotal.textContent;
            
            confirmationModal.style.display = 'flex';
        }
        
        // Close modal
        function closeModal() {
            confirmationModal.style.display = 'none';
        }
        
        // Confirm appointment
        function confirmAppointmentHandler() {
            appointment.confirmed = true;
            
            // In a real application, you would send the appointment data to a server here
            
            // Show success message
            alert('Consulta agendada com sucesso! Você receberá um e-mail de confirmação.');
            
            // Close modal
            closeModal();
            
            // Show consultation button (disabled until appointment date)
            consultationButton.style.display = 'block';
            
            // In a real application, you would enable the button on the appointment date
            // For demo purposes, we'll enable it after 5 seconds
            setTimeout(() => {
                startConsultation.disabled = false;
                startConsultation.addEventListener('click', () => {
                    alert('Iniciando consulta... Em uma aplicação real, isso conectaria você com o médico.');
                });
            }, 5000);
        }
        
        // Update summary total based on selected options
        function updateSummaryTotal() {
            if (appointment.doctor) {
                const price = appointment.paymentMethod === 'token' ? 
                    appointment.doctor.tokenPrice : appointment.doctor.price;
                summaryTotal.textContent = `R$ ${price.toFixed(2)}`;
            } else {
                summaryTotal.textContent = 'R$ 0,00';
            }
        }
        
        // Helper function to format specialty name
        function formatSpecialty(specialty) {
            return specialty.charAt(0).toUpperCase() + specialty.slice(1);
        }
        
        // Helper function to format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('pt-BR');
        }
        
        // Mobile menu toggle
        const hamburger = document.querySelector('.hamburger');
        const navMenu = document.querySelector('.nav-menu');
        
        hamburger.addEventListener('click', () => {
            navMenu.classList.toggle('active');
        });
        
        // Close menu when clicking on a link
        document.querySelectorAll('.nav-menu a').forEach(link => {
            link.addEventListener('click', () => {
                navMenu.classList.remove('active');
            });
        });
    </script>
</body>
</html>
